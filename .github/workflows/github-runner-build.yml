name: GitHub Runner Build

on:
  push:
    branches:
      - gh-runner

env:
  WORKDIR: docker/gh-runner

permissions:
  id-token: write
  contents: read

jobs:
  ecr_build:
    runs-on: ubuntu-latest
    name: ACR Build
    environment: sandbox
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Azure Login
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Azure CLI script
      uses: azure/cli@v2
      id: acr_login
      with:
        azcliversion: latest
        inlineScript: |
          TOKEN=$(az acr login --name ${{ vars.AZURE_ACR_NAME }} --expose-token --output tsv --query accessToken)
          echo "TOKEN=$TOKEN" >> "$GITHUB_OUTPUT"

    - name: Build, tag, and push docker image to Azure CR
      env:
        REGISTRY: ${{ vars.AZURE_ACR_LOGIN_SERVER }}
        REPOSITORY: gh-runner
        IMAGE_TAG: ${{ github.sha }}
        TARGETOS: linux
        TARGETARCH: amd64
        RUNNER_VERSION: 2.321.0
      run: |
        docker login $REGISTRY --username 00000000-0000-0000-0000-000000000000 --password-stdin <<< ${{ steps.acr_login.outputs.TOKEN }}
        docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG --build-arg TARGETOS=$TARGETOS --build-arg TARGETARCH=$TARGETARCH --build-arg RUNNER_VERSION=$RUNNER_VERSION ${{ env.WORKDIR }}
        docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG